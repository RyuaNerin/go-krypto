package kipher_test

import (
	"crypto/cipher"
	"testing"

	"github.com/RyuaNerin/go-krypto/kipher"
	"github.com/RyuaNerin/go-krypto/lea"

	. "github.com/RyuaNerin/testingutil"
)

func newCFB(encrypt bool, size int) BI {
	return func(key, additional []byte) (interface{}, error) {
		b, err := lea.NewCipher(key)
		if err != nil {
			return nil, err
		}

		if encrypt {
			return kipher.NewCFBEncrypterWithBlockSize(b, additional, size), nil
		} else {
			return kipher.NewCFBDecrypterWithBlockSize(b, additional, size), nil
		}
	}
}

func cfb(c interface{}, dst, src []byte) {
	c.(cipher.Stream).XORKeyStream(dst, src)
}

func Test_LEA128_CFB8_Encrypt(t *testing.T)  { BTE(t, newCFB(true, 1), cfb, tcLEA128CFB8, false) }
func Test_LEA128_CFB8_Decrypt(t *testing.T)  { BTD(t, newCFB(false, 1), cfb, tcLEA128CFB8, false) }
func Test_LEA128_CFB64_Encrypt(t *testing.T) { BTE(t, newCFB(true, 8), cfb, tcLEA128CFB64, false) }
func Test_LEA128_CFB64_Decrypt(t *testing.T) { BTD(t, newCFB(false, 8), cfb, tcLEA128CFB64, false) }

var (
	// LEA128(CFB8)MMT.txt
	tcLEA128CFB8 = []BlockTestCase{
		{
			Key:    `724F8279123B9307658A109101466A15`,
			IV:     `FEF995090770B941B0BF2B120A859BB8`,
			Plain:  `76`,
			Secure: `A3`,
		},
		{
			Key:    `718FF5B60510FB4A9AA28CF9A57A60AE`,
			IV:     `38ECC785CC238F263D14285216B406BB`,
			Plain:  `0F69`,
			Secure: `07F6`,
		},
		{
			Key:    `4719D4BF967A085D4FD98A37E3F3F705`,
			IV:     `7F5670F3E8BB9D9AAA95F12F71EA30FA`,
			Plain:  `B7622F`,
			Secure: `5EBB0C`,
		},
		{
			Key:    `0A9F9EDC2821CA7D0968763DC878A1E4`,
			IV:     `931417E6A4DFFE9F72C1ABDD298CBA9F`,
			Plain:  `58E05D1C`,
			Secure: `BAE99816`,
		},
		{
			Key:    `EA4CF40758B5DE121DFC8FB169DBE320`,
			IV:     `1910B2A7E7BEA51DDE1048AB121F60D2`,
			Plain:  `8D167EAF8C`,
			Secure: `71422B2B32`,
		},
		{
			Key:    `94D47EEC51485EDF05C753E385DC91F5`,
			IV:     `2F81F8018935DB9E254E05F8C891FE0D`,
			Plain:  `CA008A1DC0F3`,
			Secure: `D2BEB3956E25`,
		},
		{
			Key:    `735B596A88E986A2E603DEE6767B40A8`,
			IV:     `B765BAD0BE13A9547B4422093D9891B9`,
			Plain:  `7847A075C7135B`,
			Secure: `CB22C6CEE58C58`,
		},
		{
			Key:    `2C2D7B917DA0327DCAC8CFA58E04C603`,
			IV:     `F0AE976398A0450CC1F60AA28F16494B`,
			Plain:  `A3EEC411EE7D0F88`,
			Secure: `492BB1326E7DCB20`,
		},
		{
			Key:    `C29545B02FDFF91C8C1F6F5454B90C79`,
			IV:     `34750C27617F739F2FB24626E015FAA8`,
			Plain:  `B9A62DA15C57943E51`,
			Secure: `090F74FC8A4B10AEA2`,
		},
		{
			Key:    `5735BFE692D61F397BB5F7930979A0F7`,
			IV:     `FF6997FB71DC26D784F041BC757FAF67`,
			Plain:  `DD4F6AF5338947F9926D`,
			Secure: `5271D622DB4D1EAE787F`,
		},
	}
	// LEA128(CFB8)MMT.txt
	tcLEA128CFB64 = []BlockTestCase{
		{
			Key:    `724F8279123B9307658A109101466A15`,
			IV:     `FEF995090770B941B0BF2B120A859BB8`,
			Plain:  `76718FF5B60510FB`,
			Secure: `A362D89D20D9D373`,
		},
		{
			Key:    `4A9AA28CF9A57A60AE38ECC785CC238F`,
			IV:     `263D14285216B406BB0F694719D4BF96`,
			Plain:  `7A085D4FD98A37E3F3F7057F5670F3E8`,
			Secure: `DD69E861A385F8B9820D4D347B2492F3`,
		},
		{
			Key:    `BB9D9AAA95F12F71EA30FAB7622F0A9F`,
			IV:     `9EDC2821CA7D0968763DC878A1E49314`,
			Plain:  `17E6A4DFFE9F72C1ABDD298CBA9F58E05D1CEA4CF40758B5`,
			Secure: `7F90369B8DB295E3E985EA2F319CD5EEB4FA5E81639A5E5A`,
		},
		{
			Key:    `DE121DFC8FB169DBE3201910B2A7E7BE`,
			IV:     `A51DDE1048AB121F60D28D167EAF8C94`,
			Plain:  `D47EEC51485EDF05C753E385DC91F52F81F8018935DB9E254E05F8C891FE0DCA`,
			Secure: `42E71AAC4CDC810C0A0E796D8C8D63FA45598F26551942F30E853118EC6AB746`,
		},
		{
			Key:    `008A1DC0F3735B596A88E986A2E603DE`,
			IV:     `E6767B40A8B765BAD0BE13A9547B4422`,
			Plain:  `093D9891B97847A075C7135B2C2D7B917DA0327DCAC8CFA58E04C603F0AE976398A0450CC1F60AA2`,
			Secure: `49E4C53441790CCE2EB27C51EF079DDBB1AB66268F208788FF39795DD8EBE6C5502B50F3F31F3092`,
		},
		{
			Key:    `8F16494BA3EEC411EE7D0F88C29545B0`,
			IV:     `2FDFF91C8C1F6F5454B90C7934750C27`,
			Plain:  `617F739F2FB24626E015FAA8B9A62DA15C57943E515735BFE692D61F397BB5F7930979A0F7FF6997FB71DC26D784F041`,
			Secure: `16AAB88C122E4C3F836B7192E9C89752680FAB41AB88AB3C681EA1701D729C437BCFDCD3F6962FE24E33808558ABB0DC`,
		},
		{
			Key:    `BC757FAF67DD4F6AF5338947F9926DD9`,
			IV:     `CCBC43932460952EE8989B4A43B6F758`,
			Plain:  `F840A3B7F539271D2AA20F399B419C97B4A1BAC3DD5A32B14F92215C26C4A9AEB7C1E6A023F423A22DE94E3D4811AAF7F4BFC4774B77A8E9`,
			Secure: `DFAA4B8CFA3BF8F0C7456B8967DD5068B86CD73ACA57AD31337B8BC7AE34431CF925A6F4830F4CCEEC3015E6EF8903FDBC919725183C4817`,
		},
		{
			Key:    `D76854A4A7376D0AA2FE31B01B95ADC0`,
			IV:     `A510309B2888FFC2341F4AF6963E5F9E`,
			Plain:  `29211E6AEF96AD3660016D3102A42C3E3A1D9C9A623003BF1BC73589E537C098EDC566F52569D0F89AD2806903A908E5951A79831F911FB852C16B7860EB319E`,
			Secure: `670FFEDDCE0596108712466517985222DA1C5FADD1768F4A4FB2D43F39915E897B7C70933540FAF39F02E4BEB768F1AC94F5675A934FC8EE80FA1E7938EE5986`,
		},
		{
			Key:    `CA5D148E72393E19F87754A1432DA87D`,
			IV:     `5E0EB19E8631B9738115D60B31E11B7A`,
			Plain:  `68F00F7DFE8C5E6121FACF20EDB876CE3C022B33C09A3BBA4FC95D8A7DA1E7F27086410AF0ED9A97BE62DB3027D0D99FD8FDCF8AF4540B5364E7E73C6FB4FBCF8A27917D71E15985`,
			Secure: `64636BD02CB80723CBB3DF2E1821488DC72951D1EBB3B0F8D59FB637FBBFB5C0EFD1778CFFEA4596887A31D0F320326413CDF7FE56384171541F0B313929BE8502677D202290FCBA`,
		},
		{
			Key:    `76B85F1719FF39B9DA0785EB4BE59306`,
			IV:     `69765E6A2CA1C1D85DDCE71DA8F204F1`,
			Plain:  `F203421EEDCCFFE5E928359DEDD7399D067FA95CDFF09FD792AC2B33BEA701A4DA4B6E8DC8BF91E9AD69C7E901B267DEE209B05AAE2AFF92D0A04507DA88B966D599CAACD461588DD0D12317AFFC8493`,
			Secure: `E02781F614779B20645D9A1FAFB3B758248ADF4AC26AFFA9769233935557B9E4D14795343820F8BCDC622B425F322B8C4FCA5C64877F6A8315F07518FE3F65AD0EBE08BFC6DBF7427A560EB83CE3BB55`,
		},
	}
)
