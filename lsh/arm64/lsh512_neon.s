//go:build !noasm && arm64
// AUTO-GENERATED BY GOAT -- DO NOT EDIT

TEXT ·lsh512_neon_init(SB), $0-32
	MOVD ctx+0(FP), R0
	MOVD algtype+8(FP), R1
	WORD $0xa9bf7bfd       // stp	x29, x30, [sp, #-16]!           ; 16-byte Folded Spill
	WORD $0x910003fd       // mov	x29, sp
	WORD $0xb9000001       // str	w1, [x0]
	WORD $0xb900101f       // str	wzr, [x0, #16]
	WORD $0xd1007028       // sub	x8, x1, #28
	WORD $0x93c80828       // extr	x8, x1, x8, #2
	WORD $0xf100251f       // cmp	x8, #9
	WORD $0x540009a8       // b.hi	LBB0_6
	WORD $0x90000009       // adrp	x9, lCPI0_0@PAGE
	WORD $0x3dc00120       // ldr	q0, [x9, lCPI0_0@PAGEOFF]
	WORD $0x90000009       // adrp	x9, lCPI0_1@PAGE
	WORD $0x3dc00121       // ldr	q1, [x9, lCPI0_1@PAGEOFF]
	WORD $0x90000009       // adrp	x9, lCPI0_2@PAGE
	WORD $0x3dc00122       // ldr	q2, [x9, lCPI0_2@PAGEOFF]
	WORD $0x90000009       // adrp	x9, lCPI0_3@PAGE
	WORD $0x3dc00123       // ldr	q3, [x9, lCPI0_3@PAGEOFF]
	WORD $0x90000009       // adrp	x9, lCPI0_4@PAGE
	WORD $0x3dc00124       // ldr	q4, [x9, lCPI0_4@PAGEOFF]
	WORD $0x90000009       // adrp	x9, lCPI0_5@PAGE
	WORD $0x3dc00125       // ldr	q5, [x9, lCPI0_5@PAGEOFF]
	WORD $0x90000009       // adrp	x9, lCPI0_6@PAGE
	WORD $0x3dc00126       // ldr	q6, [x9, lCPI0_6@PAGEOFF]
	WORD $0x90000009       // adrp	x9, LJTI0_0@PAGE
	WORD $0x91000129       // add	x9, x9, LJTI0_0@PAGEOFF
	WORD $0x100000ca       // adr	x10, LBB0_2
	WORD $0x3868692b       // ldrb	w11, [x9, x8]
	WORD $0x8b0b094a       // add	x10, x10, x11, lsl #2
	WORD $0x90000008       // adrp	x8, lCPI0_7@PAGE
	WORD $0x3dc00107       // ldr	q7, [x8, lCPI0_7@PAGEOFF]
	WORD $0xd61f0140       // br	x10
	WORD $0x90000008       // adrp	x8, lCPI0_24@PAGE
	WORD $0x3dc00100       // ldr	q0, [x8, lCPI0_24@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_25@PAGE
	WORD $0x3dc00101       // ldr	q1, [x8, lCPI0_25@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_26@PAGE
	WORD $0x3dc00102       // ldr	q2, [x8, lCPI0_26@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_27@PAGE
	WORD $0x3dc00103       // ldr	q3, [x8, lCPI0_27@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_28@PAGE
	WORD $0x3dc00104       // ldr	q4, [x8, lCPI0_28@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_29@PAGE
	WORD $0x3dc00105       // ldr	q5, [x8, lCPI0_29@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_30@PAGE
	WORD $0x3dc00106       // ldr	q6, [x8, lCPI0_30@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_31@PAGE
	WORD $0x3dc00107       // ldr	q7, [x8, lCPI0_31@PAGEOFF]
	WORD $0x14000022       // b	LBB0_5
	WORD $0x90000008       // adrp	x8, lCPI0_16@PAGE
	WORD $0x3dc00100       // ldr	q0, [x8, lCPI0_16@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_17@PAGE
	WORD $0x3dc00101       // ldr	q1, [x8, lCPI0_17@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_18@PAGE
	WORD $0x3dc00102       // ldr	q2, [x8, lCPI0_18@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_19@PAGE
	WORD $0x3dc00103       // ldr	q3, [x8, lCPI0_19@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_20@PAGE
	WORD $0x3dc00104       // ldr	q4, [x8, lCPI0_20@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_21@PAGE
	WORD $0x3dc00105       // ldr	q5, [x8, lCPI0_21@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_22@PAGE
	WORD $0x3dc00106       // ldr	q6, [x8, lCPI0_22@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_23@PAGE
	WORD $0x3dc00107       // ldr	q7, [x8, lCPI0_23@PAGEOFF]
	WORD $0x14000011       // b	LBB0_5
	WORD $0x90000008       // adrp	x8, lCPI0_8@PAGE
	WORD $0x3dc00100       // ldr	q0, [x8, lCPI0_8@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_9@PAGE
	WORD $0x3dc00101       // ldr	q1, [x8, lCPI0_9@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_10@PAGE
	WORD $0x3dc00102       // ldr	q2, [x8, lCPI0_10@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_11@PAGE
	WORD $0x3dc00103       // ldr	q3, [x8, lCPI0_11@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_12@PAGE
	WORD $0x3dc00104       // ldr	q4, [x8, lCPI0_12@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_13@PAGE
	WORD $0x3dc00105       // ldr	q5, [x8, lCPI0_13@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_14@PAGE
	WORD $0x3dc00106       // ldr	q6, [x8, lCPI0_14@PAGEOFF]
	WORD $0x90000008       // adrp	x8, lCPI0_15@PAGE
	WORD $0x3dc00107       // ldr	q7, [x8, lCPI0_15@PAGEOFF]
	WORD $0xad011807       // stp	q7, q6, [x0, #32]
	WORD $0xad021005       // stp	q5, q4, [x0, #64]
	WORD $0xad030803       // stp	q3, q2, [x0, #96]
	WORD $0xad040001       // stp	q1, q0, [x0, #128]
	WORD $0xa8c17bfd       // ldp	x29, x30, [sp], #16             ; 16-byte Folded Reload
	WORD $0xd65f03c0       // ret

TEXT ·lsh512_neon_update(SB), $0-32
	MOVD ctx+0(FP), R0
	MOVD data+8(FP), R1
	MOVD databytelen+16(FP), R2
	WORD $0x6db93bef            // stp	d15, d14, [sp, #-112]!          ; 16-byte Folded Spill
	WORD $0x6d0133ed            // stp	d13, d12, [sp, #16]             ; 16-byte Folded Spill
	WORD $0x6d022beb            // stp	d11, d10, [sp, #32]             ; 16-byte Folded Spill
	WORD $0x6d0323e9            // stp	d9, d8, [sp, #48]               ; 16-byte Folded Spill
	WORD $0xa9046ffc            // stp	x28, x27, [sp, #64]             ; 16-byte Folded Spill
	WORD $0xa9054ff4            // stp	x20, x19, [sp, #80]             ; 16-byte Folded Spill
	WORD $0xa9067bfd            // stp	x29, x30, [sp, #96]             ; 16-byte Folded Spill
	WORD $0x910183fd            // add	x29, sp, #96
	WORD $0xd102c3e9            // sub	x9, sp, #176
	WORD $0x927ced3f            // and	sp, x9, #0xfffffffffffffff0
	WORD $0xb9401003            // ldr	w3, [x0, #16]
	WORD $0x8b020068            // add	x8, x3, x2
	WORD $0xf103fd1f            // cmp	x8, #255
	WORD $0x540002e8            // b.hi	LBB1_8
	WORD $0x7100045f            // cmp	w2, #1
	WORD $0x5400026b            // b.lt	LBB1_7
	WORD $0x92407c48            // and	x8, x2, #0xffffffff
	WORD $0xf100211f            // cmp	x8, #8
	WORD $0x540000c3            // b.lo	LBB1_4
	WORD $0x8b030009            // add	x9, x0, x3
	WORD $0xcb010129            // sub	x9, x9, x1
	WORD $0x91028129            // add	x9, x9, #160
	WORD $0xf101013f            // cmp	x9, #64
	WORD $0x54004362            // b.hs	LBB1_31
	WORD $0xd2800009            // mov	x9, #0                          ; =0x0
	WORD $0xcb090108            // sub	x8, x8, x9
	WORD $0x8b03012a            // add	x10, x9, x3
	WORD $0x8b00014a            // add	x10, x10, x0
	WORD $0x9102814a            // add	x10, x10, #160
	WORD $0x8b090029            // add	x9, x1, x9
	WORD $0x3840152b            // ldrb	w11, [x9], #1
	WORD $0x3800154b            // strb	w11, [x10], #1
	WORD $0xf1000508            // subs	x8, x8, #1
	WORD $0x54ffffa1            // b.ne	LBB1_6
	WORD $0x0b020062            // add	w2, w3, w2
	WORD $0x14000205            // b	LBB1_29
	WORD $0x90000009            // adrp	x9, lCPI1_0@PAGE
	WORD $0x9000000a            // adrp	x10, lCPI1_1@PAGE
	WORD $0x9000000b            // adrp	x11, lCPI1_2@PAGE
	WORD $0x9000000c            // adrp	x12, lCPI1_3@PAGE
	WORD $0x9000000d            // adrp	x13, lCPI1_4@PAGE
	WORD $0x9000000e            // adrp	x14, lCPI1_5@PAGE
	WORD $0x9000000f            // adrp	x15, lCPI1_6@PAGE
	WORD $0x90000010            // adrp	x16, lCPI1_7@PAGE
	WORD $0x90000008            // adrp	x8, _STEP512@PAGE
	WORD $0x91000108            // add	x8, x8, _STEP512@PAGEOFF
	WORD $0x34001f03            // cbz	w3, LBB1_18
	WORD $0x52802011            // mov	w17, #256                       ; =0x100
	WORD $0xcb030231            // sub	x17, x17, x3
	WORD $0x7100063f            // cmp	w17, #1
	WORD $0x5400026b            // b.lt	LBB1_15
	WORD $0x92407e24            // and	x4, x17, #0xffffffff
	WORD $0xf100209f            // cmp	x4, #8
	WORD $0x540000c3            // b.lo	LBB1_12
	WORD $0x8b030005            // add	x5, x0, x3
	WORD $0xcb0100a5            // sub	x5, x5, x1
	WORD $0x910280a5            // add	x5, x5, #160
	WORD $0xf10100bf            // cmp	x5, #64
	WORD $0x54004002            // b.hs	LBB1_35
	WORD $0xd2800005            // mov	x5, #0                          ; =0x0
	WORD $0xcb050084            // sub	x4, x4, x5
	WORD $0x8b0300a3            // add	x3, x5, x3
	WORD $0x8b000063            // add	x3, x3, x0
	WORD $0x91028063            // add	x3, x3, #160
	WORD $0x8b050025            // add	x5, x1, x5
	WORD $0x384014a6            // ldrb	w6, [x5], #1
	WORD $0x38001466            // strb	w6, [x3], #1
	WORD $0xf1000484            // subs	x4, x4, #1
	WORD $0x54ffffa1            // b.ne	LBB1_14
	WORD $0xd2800003            // mov	x3, #0                          ; =0x0
	WORD $0xad45041e            // ldp	q30, q1, [x0, #160]
	WORD $0xad46641b            // ldp	q27, q25, [x0, #192]
	WORD $0xad47441f            // ldp	q31, q17, [x0, #224]
	WORD $0xad485416            // ldp	q22, q21, [x0, #256]
	WORD $0xad490812            // ldp	q18, q2, [x0, #288]
	WORD $0xad4a1404            // ldp	q4, q5, [x0, #320]
	WORD $0xad4b0c07            // ldp	q7, q3, [x0, #352]
	WORD $0xad4c681d            // ldp	q29, q26, [x0, #384]
	WORD $0xad41300d            // ldp	q13, q12, [x0, #32]
	WORD $0xad42380f            // ldp	q15, q14, [x0, #64]
	WORD $0xad432009            // ldp	q9, q8, [x0, #96]
	WORD $0xad44280b            // ldp	q11, q10, [x0, #128]
	WORD $0x3dc00126            // ldr	q6, [x9, lCPI1_0@PAGEOFF]
	WORD $0x3d801fe6            // str	q6, [sp, #112]                  ; 16-byte Folded Spill
	WORD $0x3dc00146            // ldr	q6, [x10, lCPI1_1@PAGEOFF]
	WORD $0x3d801be6            // str	q6, [sp, #96]                   ; 16-byte Folded Spill
	WORD $0x3dc00166            // ldr	q6, [x11, lCPI1_2@PAGEOFF]
	WORD $0x3d8017e6            // str	q6, [sp, #80]                   ; 16-byte Folded Spill
	WORD $0x3dc00186            // ldr	q6, [x12, lCPI1_3@PAGEOFF]
	WORD $0x3d8013e6            // str	q6, [sp, #64]                   ; 16-byte Folded Spill
	WORD $0x3dc001a6            // ldr	q6, [x13, lCPI1_4@PAGEOFF]
	WORD $0x3d800fe6            // str	q6, [sp, #48]                   ; 16-byte Folded Spill
	WORD $0x3dc001c0            // ldr	q0, [x14, lCPI1_5@PAGEOFF]
	WORD $0x3d800be0            // str	q0, [sp, #32]                   ; 16-byte Folded Spill
	WORD $0x3dc001e0            // ldr	q0, [x15, lCPI1_6@PAGEOFF]
	WORD $0x3d8007e0            // str	q0, [sp, #16]                   ; 16-byte Folded Spill
	WORD $0x3dc00200            // ldr	q0, [x16, lCPI1_7@PAGEOFF]
	WORD $0x3d8003e0            // str	q0, [sp]                        ; 16-byte Folded Spill
	WORD $0xad42e3f3            // ldp	q19, q24, [sp, #80]             ; 32-byte Folded Reload
	WORD $0xad41d3f7            // ldp	q23, q20, [sp, #48]             ; 32-byte Folded Reload
	WORD $0xad0447e1            // stp	q1, q17, [sp, #128]             ; 32-byte Folded Spill
	WORD $0x6e3e1dad            // eor.16b	v13, v13, v30
	WORD $0x6e211d8c            // eor.16b	v12, v12, v1
	WORD $0x3d802bff            // str	q31, [sp, #160]                 ; 16-byte Folded Spill
	WORD $0x6e3b1def            // eor.16b	v15, v15, v27
	WORD $0x8b030104            // add	x4, x8, x3
	WORD $0x6e391dce            // eor.16b	v14, v14, v25
	WORD $0x6e3f1d29            // eor.16b	v9, v9, v31
	WORD $0x6e311d08            // eor.16b	v8, v8, v17
	WORD $0x6e361d6b            // eor.16b	v11, v11, v22
	WORD $0x6e351d4a            // eor.16b	v10, v10, v21
	WORD $0x4eed852d            // add.2d	v13, v9, v13
	WORD $0x4eec850c            // add.2d	v12, v8, v12
	WORD $0x4eef856f            // add.2d	v15, v11, v15
	WORD $0x4eee854e            // add.2d	v14, v10, v14
	WORD $0x4f5755a6            // shl.2d	v6, v13, #23
	WORD $0x6f5745a6            // sri.2d	v6, v13, #41
	WORD $0x4f57558d            // shl.2d	v13, v12, #23
	WORD $0x6f57458d            // sri.2d	v13, v12, #41
	WORD $0x4f5755ec            // shl.2d	v12, v15, #23
	WORD $0x6f5745ec            // sri.2d	v12, v15, #41
	WORD $0x4f5755cf            // shl.2d	v15, v14, #23
	WORD $0x6f5745cf            // sri.2d	v15, v14, #41
	WORD $0x4ea71cff            // mov.16b	v31, v7
	WORD $0xad401c8e            // ldp	q14, q7, [x4]
	WORD $0x6e2e1cc6            // eor.16b	v6, v6, v14
	WORD $0x6e271da7            // eor.16b	v7, v13, v7
	WORD $0xad41388d            // ldp	q13, q14, [x4, #32]
	WORD $0x6e2d1d8c            // eor.16b	v12, v12, v13
	WORD $0x6e2e1ded            // eor.16b	v13, v15, v14
	WORD $0x4ee984c9            // add.2d	v9, v6, v9
	WORD $0x4ee884e8            // add.2d	v8, v7, v8
	WORD $0x4eeb858b            // add.2d	v11, v12, v11
	WORD $0x4eea85aa            // add.2d	v10, v13, v10
	WORD $0x4f7b552e            // shl.2d	v14, v9, #59
	WORD $0x6f7b452e            // sri.2d	v14, v9, #5
	WORD $0x4f7b5509            // shl.2d	v9, v8, #59
	WORD $0x6f7b4509            // sri.2d	v9, v8, #5
	WORD $0x4f7b5568            // shl.2d	v8, v11, #59
	WORD $0x6f7b4568            // sri.2d	v8, v11, #5
	WORD $0x4f7b554b            // shl.2d	v11, v10, #59
	WORD $0x6f7b454b            // sri.2d	v11, v10, #5
	WORD $0x4ee685c6            // add.2d	v6, v14, v6
	WORD $0x4ee78527            // add.2d	v7, v9, v7
	WORD $0x4eec850a            // add.2d	v10, v8, v12
	WORD $0x4eed856c            // add.2d	v12, v11, v13
	WORD $0x3dc01ff1            // ldr	q17, [sp, #112]                 ; 16-byte Folded Reload
	WORD $0x6ef145cd            // ushl.2d	v13, v14, v17
	WORD $0x6ef845ce            // ushl.2d	v14, v14, v24
	WORD $0x6e2d1dcd            // eor.16b	v13, v14, v13
	WORD $0x6ef3452e            // ushl.2d	v14, v9, v19
	WORD $0x6ef44529            // ushl.2d	v9, v9, v20
	WORD $0x6e2e1d29            // eor.16b	v9, v9, v14
	WORD $0x6ef7450e            // ushl.2d	v14, v8, v23
	WORD $0xad4083e1            // ldp	q1, q0, [sp, #16]               ; 32-byte Folded Reload
	WORD $0x6ee04508            // ushl.2d	v8, v8, v0
	WORD $0x6e2e1d08            // eor.16b	v8, v8, v14
	WORD $0x6ee1456e            // ushl.2d	v14, v11, v1
	WORD $0x3dc003fc            // ldr	q28, [sp]                       ; 16-byte Folded Reload
	WORD $0x6efc456b            // ushl.2d	v11, v11, v28
	WORD $0x6e2e1d6b            // eor.16b	v11, v11, v14
	WORD $0x6e0740e7            // ext.16b	v7, v7, v7, #8
	WORD $0x6e0640ee            // ext.16b	v14, v7, v6, #8
	WORD $0x6e0740c6            // ext.16b	v6, v6, v7, #8
	WORD $0x6e0c4187            // ext.16b	v7, v12, v12, #8
	WORD $0x6e0a40ec            // ext.16b	v12, v7, v10, #8
	WORD $0x6e074147            // ext.16b	v7, v10, v7, #8
	WORD $0x6e0d41aa            // ext.16b	v10, v13, v13, #8
	WORD $0x6e094129            // ext.16b	v9, v9, v9, #8
	WORD $0x6e09414d            // ext.16b	v13, v10, v9, #8
	WORD $0x6e0a4129            // ext.16b	v9, v9, v10, #8
	WORD $0x6e084108            // ext.16b	v8, v8, v8, #8
	WORD $0x6e0b416a            // ext.16b	v10, v11, v11, #8
	WORD $0x6e0a410b            // ext.16b	v11, v8, v10, #8
	WORD $0x6e084148            // ext.16b	v8, v10, v8, #8
	WORD $0x6e1b432a            // ext.16b	v10, v25, v27, #8
	WORD $0x6e194379            // ext.16b	v25, v27, v25, #8
	WORD $0x6e1642af            // ext.16b	v15, v21, v22, #8
	WORD $0x6e1542d5            // ext.16b	v21, v22, v21, #8
	WORD $0x6e321d96            // eor.16b	v22, v12, v18
	WORD $0x6e221ce7            // eor.16b	v7, v7, v2
	WORD $0x6e241d7b            // eor.16b	v27, v11, v4
	WORD $0x6e251d08            // eor.16b	v8, v8, v5
	WORD $0x6e3f1dcb            // eor.16b	v11, v14, v31
	WORD $0x6e231cc6            // eor.16b	v6, v6, v3
	WORD $0x6e3d1dac            // eor.16b	v12, v13, v29
	WORD $0x6e3a1d29            // eor.16b	v9, v9, v26
	WORD $0x4eeb86d6            // add.2d	v22, v22, v11
	WORD $0x4ee684e7            // add.2d	v7, v7, v6
	WORD $0x4eec877b            // add.2d	v27, v27, v12
	WORD $0x4ee98508            // add.2d	v8, v8, v9
	WORD $0x4f4756cd            // shl.2d	v13, v22, #7
	WORD $0x6f4746cd            // sri.2d	v13, v22, #57
	WORD $0x4f4754f6            // shl.2d	v22, v7, #7
	WORD $0x6f4744f6            // sri.2d	v22, v7, #57
	WORD $0x4f475767            // shl.2d	v7, v27, #7
	WORD $0x6f474767            // sri.2d	v7, v27, #57
	WORD $0x4f47550e            // shl.2d	v14, v8, #7
	WORD $0x6f47450e            // sri.2d	v14, v8, #57
	WORD $0xad42209b            // ldp	q27, q8, [x4, #64]
	WORD $0x6e3b1dad            // eor.16b	v13, v13, v27
	WORD $0x6e281ec8            // eor.16b	v8, v22, v8
	WORD $0xad434096            // ldp	q22, q16, [x4, #96]
	WORD $0x6e361ce7            // eor.16b	v7, v7, v22
	WORD $0x4eea849b            // add.2d	v27, v4, v10
	WORD $0x4ef984b9            // add.2d	v25, v5, v25
	WORD $0x4eef87b6            // add.2d	v22, v29, v15
	WORD $0x4ef58755            // add.2d	v21, v26, v21
	WORD $0x6e301dd0            // eor.16b	v16, v14, v16
	WORD $0x4eeb85aa            // add.2d	v10, v13, v11
	WORD $0x4ee68506            // add.2d	v6, v8, v6
	WORD $0x4eec84eb            // add.2d	v11, v7, v12
	WORD $0x4ee98609            // add.2d	v9, v16, v9
	WORD $0x4f43554c            // shl.2d	v12, v10, #3
	WORD $0x6f43454c            // sri.2d	v12, v10, #61
	WORD $0x4f4354ca            // shl.2d	v10, v6, #3
	WORD $0x6f4344ca            // sri.2d	v10, v6, #61
	WORD $0x4f435566            // shl.2d	v6, v11, #3
	WORD $0x6f434566            // sri.2d	v6, v11, #61
	WORD $0x4f43552b            // shl.2d	v11, v9, #3
	WORD $0x6f43452b            // sri.2d	v11, v9, #61
	WORD $0x4eed858d            // add.2d	v13, v12, v13
	WORD $0x4ee88548            // add.2d	v8, v10, v8
	WORD $0x4ee784c7            // add.2d	v7, v6, v7
	WORD $0x4ef08570            // add.2d	v16, v11, v16
	WORD $0x6ef14589            // ushl.2d	v9, v12, v17
	WORD $0x6ef8458c            // ushl.2d	v12, v12, v24
	WORD $0x6e291d8e            // eor.16b	v14, v12, v9
	WORD $0x6ef34549            // ushl.2d	v9, v10, v19
	WORD $0x6ef4454a            // ushl.2d	v10, v10, v20
	WORD $0x6e291d4a            // eor.16b	v10, v10, v9
	WORD $0x6ef744c9            // ushl.2d	v9, v6, v23
	WORD $0x6ee044c6            // ushl.2d	v6, v6, v0
	WORD $0x6e291cc6            // eor.16b	v6, v6, v9
	WORD $0x6ee14569            // ushl.2d	v9, v11, v1
	WORD $0x6efc456b            // ushl.2d	v11, v11, v28
	WORD $0x6e291d6f            // eor.16b	v15, v11, v9
	WORD $0x6e084108            // ext.16b	v8, v8, v8, #8
	WORD $0x6e0d4109            // ext.16b	v9, v8, v13, #8
	WORD $0x6e0841a8            // ext.16b	v8, v13, v8, #8
	WORD $0x6e104210            // ext.16b	v16, v16, v16, #8
	WORD $0x6e07420d            // ext.16b	v13, v16, v7, #8
	WORD $0x6e1040ec            // ext.16b	v12, v7, v16, #8
	WORD $0x6e0e41c7            // ext.16b	v7, v14, v14, #8
	WORD $0x6e0a4150            // ext.16b	v16, v10, v10, #8
	WORD $0x6e1040eb            // ext.16b	v11, v7, v16, #8
	WORD $0x6e07420a            // ext.16b	v10, v16, v7, #8
	WORD $0x6e0640c6            // ext.16b	v6, v6, v6, #8
	WORD $0x6e0f41e7            // ext.16b	v7, v15, v15, #8
	WORD $0x6e0740cf            // ext.16b	v15, v6, v7, #8
	WORD $0x6e0640ee            // ext.16b	v14, v7, v6, #8
	WORD $0x6e0440a6            // ext.16b	v6, v5, v4, #8
	WORD $0x6e054085            // ext.16b	v5, v4, v5, #8
	WORD $0x6e1d4347            // ext.16b	v7, v26, v29, #8
	WORD $0x6e1a43b0            // ext.16b	v16, v29, v26, #8
	WORD $0x3dc023e0            // ldr	q0, [sp, #128]                  ; 16-byte Folded Reload
	WORD $0x6e004004            // ext.16b	v4, v0, v0, #8
	WORD $0x3dc027e0            // ldr	q0, [sp, #144]                  ; 16-byte Folded Reload
	WORD $0x6e00401c            // ext.16b	v28, v0, v0, #8
	WORD $0x4efe8441            // add.2d	v1, v2, v30
	WORD $0x4ee4865e            // add.2d	v30, v18, v4
	WORD $0x3dc02be0            // ldr	q0, [sp, #160]                  ; 16-byte Folded Reload
	WORD $0x4ee08471            // add.2d	v17, v3, v0
	WORD $0x4ebf1fe0            // mov.16b	v0, v31
	WORD $0x4efc87ff            // add.2d	v31, v31, v28
	WORD $0x6e024044            // ext.16b	v4, v2, v2, #8
	WORD $0x6e03407c            // ext.16b	v28, v3, v3, #8
	WORD $0x4ef28422            // add.2d	v2, v1, v18
	WORD $0x4efe8492            // add.2d	v18, v4, v30
	WORD $0x4efb84c4            // add.2d	v4, v6, v27
	WORD $0x4ee58725            // add.2d	v5, v25, v5
	WORD $0x4ee08623            // add.2d	v3, v17, v0
	WORD $0x91020063            // add	x3, x3, #128
	WORD $0x4eff879a            // add.2d	v26, v28, v31
	WORD $0x4ef684fd            // add.2d	v29, v7, v22
	WORD $0x4eba1f47            // mov.16b	v7, v26
	WORD $0x4ef086ba            // add.2d	v26, v21, v16
	WORD $0x711c007f            // cmp	w3, #1792
	WORD $0x54ffe9c1            // b.ne	LBB1_16
	WORD $0x6e3e1da2            // eor.16b	v2, v13, v30
	WORD $0x6e211d81            // eor.16b	v1, v12, v1
	WORD $0xad010402            // stp	q2, q1, [x0, #32]
	WORD $0x6e3b1de1            // eor.16b	v1, v15, v27
	WORD $0x6e391dc2            // eor.16b	v2, v14, v25
	WORD $0xad020801            // stp	q1, q2, [x0, #64]
	WORD $0x6e3f1d21            // eor.16b	v1, v9, v31
	WORD $0x6e311d00            // eor.16b	v0, v8, v17
	WORD $0xad030001            // stp	q1, q0, [x0, #96]
	WORD $0x6e361d60            // eor.16b	v0, v11, v22
	WORD $0x6e351d41            // eor.16b	v1, v10, v21
	WORD $0xad040400            // stp	q0, q1, [x0, #128]
	WORD $0x8b110021            // add	x1, x1, x17
	WORD $0xcb110042            // sub	x2, x2, x17
	WORD $0xb900101f            // str	wzr, [x0, #16]
	WORD $0xf104005f            // cmp	x2, #256
	WORD $0x54001e23            // b.lo	LBB1_23
	WORD $0xad412c1e            // ldp	q30, q11, [x0, #32]
	WORD $0xad42340c            // ldp	q12, q13, [x0, #64]
	WORD $0xad437c12            // ldp	q18, q31, [x0, #96]
	WORD $0xad44000a            // ldp	q10, q0, [x0, #128]
	WORD $0x3dc00122            // ldr	q2, [x9, lCPI1_0@PAGEOFF]
	WORD $0x3dc00143            // ldr	q3, [x10, lCPI1_1@PAGEOFF]
	WORD $0x3dc00164            // ldr	q4, [x11, lCPI1_2@PAGEOFF]
	WORD $0x3dc00185            // ldr	q5, [x12, lCPI1_3@PAGEOFF]
	WORD $0x3dc001a6            // ldr	q6, [x13, lCPI1_4@PAGEOFF]
	WORD $0x3dc001c7            // ldr	q7, [x14, lCPI1_5@PAGEOFF]
	WORD $0x3dc001f0            // ldr	q16, [x15, lCPI1_6@PAGEOFF]
	WORD $0x3dc00211            // ldr	q17, [x16, lCPI1_7@PAGEOFF]
	WORD $0x3d802be0            // str	q0, [sp, #160]                  ; 16-byte Folded Spill
	WORD $0xd2800009            // mov	x9, #0                          ; =0x0
	WORD $0xad40242e            // ldp	q14, q9, [x1]
	WORD $0xad41643b            // ldp	q27, q25, [x1, #32]
	WORD $0xad42002f            // ldp	q15, q0, [x1, #64]
	WORD $0xad435837            // ldp	q23, q22, [x1, #96]
	WORD $0xad444c38            // ldp	q24, q19, [x1, #128]
	WORD $0xad455434            // ldp	q20, q21, [x1, #160]
	WORD $0xad46043a            // ldp	q26, q1, [x1, #192]
	WORD $0xad47743c            // ldp	q28, q29, [x1, #224]
	WORD $0xad03a7e0            // stp	q0, q9, [sp, #112]              ; 32-byte Folded Spill
	WORD $0x3d8027ee            // str	q14, [sp, #144]                 ; 16-byte Folded Spill
	WORD $0x6e2e1fc8            // eor.16b	v8, v30, v14
	WORD $0x6e291d69            // eor.16b	v9, v11, v9
	WORD $0x6e3b1d8c            // eor.16b	v12, v12, v27
	WORD $0x8b09010a            // add	x10, x8, x9
	WORD $0x6e391dad            // eor.16b	v13, v13, v25
	WORD $0x6e2f1e5e            // eor.16b	v30, v18, v15
	WORD $0x4eb31e6e            // mov.16b	v14, v19
	WORD $0x6e201fff            // eor.16b	v31, v31, v0
	WORD $0x6e371d4a            // eor.16b	v10, v10, v23
	WORD $0x3dc02be0            // ldr	q0, [sp, #160]                  ; 16-byte Folded Reload
	WORD $0x6e361c0b            // eor.16b	v11, v0, v22
	WORD $0x4ee887c8            // add.2d	v8, v30, v8
	WORD $0x4ee987e9            // add.2d	v9, v31, v9
	WORD $0x4eec854c            // add.2d	v12, v10, v12
	WORD $0x4eed856d            // add.2d	v13, v11, v13
	WORD $0x4f575500            // shl.2d	v0, v8, #23
	WORD $0x6f574500            // sri.2d	v0, v8, #41
	WORD $0x4f575528            // shl.2d	v8, v9, #23
	WORD $0x6f574528            // sri.2d	v8, v9, #41
	WORD $0x4f575589            // shl.2d	v9, v12, #23
	WORD $0x6f574589            // sri.2d	v9, v12, #41
	WORD $0x4f5755ac            // shl.2d	v12, v13, #23
	WORD $0x6f5745ac            // sri.2d	v12, v13, #41
	WORD $0x4ea11c33            // mov.16b	v19, v1
	WORD $0xad40054d            // ldp	q13, q1, [x10]
	WORD $0x6e2d1c00            // eor.16b	v0, v0, v13
	WORD $0x6e211d01            // eor.16b	v1, v8, v1
	WORD $0xad413548            // ldp	q8, q13, [x10, #32]
	WORD $0x6e281d28            // eor.16b	v8, v9, v8
	WORD $0x6e2d1d89            // eor.16b	v9, v12, v13
	WORD $0x4efe841e            // add.2d	v30, v0, v30
	WORD $0x4eff843f            // add.2d	v31, v1, v31
	WORD $0x4eea850a            // add.2d	v10, v8, v10
	WORD $0x4eeb852b            // add.2d	v11, v9, v11
	WORD $0x4f7b57cc            // shl.2d	v12, v30, #59
	WORD $0x6f7b47cc            // sri.2d	v12, v30, #5
	WORD $0x4f7b57fe            // shl.2d	v30, v31, #59
	WORD $0x6f7b47fe            // sri.2d	v30, v31, #5
	WORD $0x4f7b555f            // shl.2d	v31, v10, #59
	WORD $0x6f7b455f            // sri.2d	v31, v10, #5
	WORD $0x4f7b556a            // shl.2d	v10, v11, #59
	WORD $0x6f7b456a            // sri.2d	v10, v11, #5
	WORD $0x4ee08580            // add.2d	v0, v12, v0
	WORD $0x4ee187c1            // add.2d	v1, v30, v1
	WORD $0x4ee887e8            // add.2d	v8, v31, v8
	WORD $0x4ee98549            // add.2d	v9, v10, v9
	WORD $0x6ee2458b            // ushl.2d	v11, v12, v2
	WORD $0x6ee3458c            // ushl.2d	v12, v12, v3
	WORD $0x6e2b1d8b            // eor.16b	v11, v12, v11
	WORD $0x6ee447cc            // ushl.2d	v12, v30, v4
	WORD $0x6ee547de            // ushl.2d	v30, v30, v5
	WORD $0x6e2c1fde            // eor.16b	v30, v30, v12
	WORD $0x6ee647ec            // ushl.2d	v12, v31, v6
	WORD $0x6ee747ff            // ushl.2d	v31, v31, v7
	WORD $0x6e2c1fff            // eor.16b	v31, v31, v12
	WORD $0x6ef0454c            // ushl.2d	v12, v10, v16
	WORD $0x6ef1454a            // ushl.2d	v10, v10, v17
	WORD $0x6e2c1d4a            // eor.16b	v10, v10, v12
	WORD $0x6e014021            // ext.16b	v1, v1, v1, #8
	WORD $0x6e00402c            // ext.16b	v12, v1, v0, #8
	WORD $0x6e014000            // ext.16b	v0, v0, v1, #8
	WORD $0x6e094121            // ext.16b	v1, v9, v9, #8
	WORD $0x6e084029            // ext.16b	v9, v1, v8, #8
	WORD $0x6e014101            // ext.16b	v1, v8, v1, #8
	WORD $0x6e0b4168            // ext.16b	v8, v11, v11, #8
	WORD $0x6e1e43de            // ext.16b	v30, v30, v30, #8
	WORD $0x6e1e410b            // ext.16b	v11, v8, v30, #8
	WORD $0x6e0843de            // ext.16b	v30, v30, v8, #8
	WORD $0x6e1f43ff            // ext.16b	v31, v31, v31, #8
	WORD $0x6e0a4148            // ext.16b	v8, v10, v10, #8
	WORD $0x6e0843ea            // ext.16b	v10, v31, v8, #8
	WORD $0x6e1f411f            // ext.16b	v31, v8, v31, #8
	WORD $0x6e1b4328            // ext.16b	v8, v25, v27, #8
	WORD $0x6e194379            // ext.16b	v25, v27, v25, #8
	WORD $0x6e1742cd            // ext.16b	v13, v22, v23, #8
	WORD $0x6e1642f6            // ext.16b	v22, v23, v22, #8
	WORD $0x6e381d37            // eor.16b	v23, v9, v24
	WORD $0x6e2e1c21            // eor.16b	v1, v1, v14
	WORD $0x6e341d5b            // eor.16b	v27, v10, v20
	WORD $0x6e351fff            // eor.16b	v31, v31, v21
	WORD $0x6e3a1d89            // eor.16b	v9, v12, v26
	WORD $0x6e331c00            // eor.16b	v0, v0, v19
	WORD $0x6e3c1d6a            // eor.16b	v10, v11, v28
	WORD $0x6e3d1fde            // eor.16b	v30, v30, v29
	WORD $0x4ee986f7            // add.2d	v23, v23, v9
	WORD $0x4ee08421            // add.2d	v1, v1, v0
	WORD $0x4eea877b            // add.2d	v27, v27, v10
	WORD $0x4efe87ff            // add.2d	v31, v31, v30
	WORD $0x4f4756eb            // shl.2d	v11, v23, #7
	WORD $0x6f4746eb            // sri.2d	v11, v23, #57
	WORD $0x4f475437            // shl.2d	v23, v1, #7
	WORD $0x6f474437            // sri.2d	v23, v1, #57
	WORD $0x4f475761            // shl.2d	v1, v27, #7
	WORD $0x6f474761            // sri.2d	v1, v27, #57
	WORD $0x4f4757ec            // shl.2d	v12, v31, #7
	WORD $0x6f4747ec            // sri.2d	v12, v31, #57
	WORD $0xad427d5b            // ldp	q27, q31, [x10, #64]
	WORD $0x6e3b1d6b            // eor.16b	v11, v11, v27
	WORD $0x6e3f1eff            // eor.16b	v31, v23, v31
	WORD $0x4eb11e32            // mov.16b	v18, v17
	WORD $0x4eb01e11            // mov.16b	v17, v16
	WORD $0x4ea71cf0            // mov.16b	v16, v7
	WORD $0x4ea61cc7            // mov.16b	v7, v6
	WORD $0x4ea51ca6            // mov.16b	v6, v5
	WORD $0x4ea41c85            // mov.16b	v5, v4
	WORD $0x4ea31c64            // mov.16b	v4, v3
	WORD $0x4ea21c43            // mov.16b	v3, v2
	WORD $0xad430957            // ldp	q23, q2, [x10, #96]
	WORD $0x6e371c21            // eor.16b	v1, v1, v23
	WORD $0x4ee8869b            // add.2d	v27, v20, v8
	WORD $0x4ef986b7            // add.2d	v23, v21, v25
	WORD $0x4eed8799            // add.2d	v25, v28, v13
	WORD $0x4ef687b6            // add.2d	v22, v29, v22
	WORD $0xad02dbf9            // stp	q25, q22, [sp, #80]             ; 32-byte Folded Spill
	WORD $0x6e221d82            // eor.16b	v2, v12, v2
	WORD $0x4ee98568            // add.2d	v8, v11, v9
	WORD $0x4ee087e0            // add.2d	v0, v31, v0
	WORD $0x4eea8429            // add.2d	v9, v1, v10
	WORD $0x4efe845e            // add.2d	v30, v2, v30
	WORD $0x4f43550a            // shl.2d	v10, v8, #3
	WORD $0x6f43450a            // sri.2d	v10, v8, #61
	WORD $0x4f435408            // shl.2d	v8, v0, #3
	WORD $0x6f434408            // sri.2d	v8, v0, #61
	WORD $0x4f435520            // shl.2d	v0, v9, #3
	WORD $0x6f434520            // sri.2d	v0, v9, #61
	WORD $0x4f4357c9            // shl.2d	v9, v30, #3
	WORD $0x6f4347c9            // sri.2d	v9, v30, #61
	WORD $0x4eeb854b            // add.2d	v11, v10, v11
	WORD $0x4eff851e            // add.2d	v30, v8, v31
	WORD $0x4ee18401            // add.2d	v1, v0, v1
	WORD $0x4ee28522            // add.2d	v2, v9, v2
	WORD $0x6ee3455f            // ushl.2d	v31, v10, v3
	WORD $0x6ee4454a            // ushl.2d	v10, v10, v4
	WORD $0x6e3f1d4a            // eor.16b	v10, v10, v31
	WORD $0x6ee5451f            // ushl.2d	v31, v8, v5
	WORD $0x6ee64508            // ushl.2d	v8, v8, v6
	WORD $0x6e3f1d0c            // eor.16b	v12, v8, v31
	WORD $0x6ee7441f            // ushl.2d	v31, v0, v7
	WORD $0x6ef04400            // ushl.2d	v0, v0, v16
	WORD $0x6e3f1c00            // eor.16b	v0, v0, v31
	WORD $0x6ef1453f            // ushl.2d	v31, v9, v17
	WORD $0x6ef24528            // ushl.2d	v8, v9, v18
	WORD $0x6e3f1d0d            // eor.16b	v13, v8, v31
	WORD $0x6e1e43df            // ext.16b	v31, v30, v30, #8
	WORD $0x6e0b43e8            // ext.16b	v8, v31, v11, #8
	WORD $0x6e1f4179            // ext.16b	v25, v11, v31, #8
	WORD $0x6e024042            // ext.16b	v2, v2, v2, #8
	WORD $0x6e014056            // ext.16b	v22, v2, v1, #8
	WORD $0x6e02402b            // ext.16b	v11, v1, v2, #8
	WORD $0x6e0a4141            // ext.16b	v1, v10, v10, #8
	WORD $0x6e0c4182            // ext.16b	v2, v12, v12, #8
	WORD $0x6e02402a            // ext.16b	v10, v1, v2, #8
	WORD $0x6e014041            // ext.16b	v1, v2, v1, #8
	WORD $0x3d802be1            // str	q1, [sp, #160]                  ; 16-byte Folded Spill
	WORD $0x6e004000            // ext.16b	v0, v0, v0, #8
	WORD $0x6e0d41a1            // ext.16b	v1, v13, v13, #8
	WORD $0x6e01400c            // ext.16b	v12, v0, v1, #8
	WORD $0x6e00402d            // ext.16b	v13, v1, v0, #8
	WORD $0x6e1442be            // ext.16b	v30, v21, v20, #8
	WORD $0x6e154281            // ext.16b	v1, v20, v21, #8
	WORD $0x6e1c43a2            // ext.16b	v2, v29, v28, #8
	WORD $0x6e1d439d            // ext.16b	v29, v28, v29, #8
	WORD $0x3dc023e0            // ldr	q0, [sp, #128]                  ; 16-byte Folded Reload
	WORD $0x6e004014            // ext.16b	v20, v0, v0, #8
	WORD $0x3dc01fe0            // ldr	q0, [sp, #112]                  ; 16-byte Folded Reload
	WORD $0x6e004015            // ext.16b	v21, v0, v0, #8
	WORD $0x3dc027e0            // ldr	q0, [sp, #144]                  ; 16-byte Folded Reload
	WORD $0x4eae1ddc            // mov.16b	v28, v14
	WORD $0x4ee085df            // add.2d	v31, v14, v0
	WORD $0x4ef4870e            // add.2d	v14, v24, v20
	WORD $0x4eef8660            // add.2d	v0, v19, v15
	WORD $0x4ef5874f            // add.2d	v15, v26, v21
	WORD $0x6e1c4394            // ext.16b	v20, v28, v28, #8
	WORD $0x6e13427c            // ext.16b	v28, v19, v19, #8
	WORD $0x4ebf1fe9            // mov.16b	v9, v31
	WORD $0x4ef887f3            // add.2d	v19, v31, v24
	WORD $0x4eb91f3f            // mov.16b	v31, v25
	WORD $0x4eb71ef9            // mov.16b	v25, v23
	WORD $0x4eee8698            // add.2d	v24, v20, v14
	WORD $0x4efb87d4            // add.2d	v20, v30, v27
	WORD $0x4eb61ede            // mov.16b	v30, v22
	WORD $0xad42dbf7            // ldp	q23, q22, [sp, #80]             ; 32-byte Folded Reload
	WORD $0x4ee18735            // add.2d	v21, v25, v1
	WORD $0x4efa8401            // add.2d	v1, v0, v26
	WORD $0x91020129            // add	x9, x9, #128
	WORD $0x4eef879a            // add.2d	v26, v28, v15
	WORD $0x4ef7845c            // add.2d	v28, v2, v23
	WORD $0x4ea31c62            // mov.16b	v2, v3
	WORD $0x4ea41c83            // mov.16b	v3, v4
	WORD $0x4ea51ca4            // mov.16b	v4, v5
	WORD $0x4ea61cc5            // mov.16b	v5, v6
	WORD $0x4ea71ce6            // mov.16b	v6, v7
	WORD $0x4eb01e07            // mov.16b	v7, v16
	WORD $0x4eb11e30            // mov.16b	v16, v17
	WORD $0x4eb21e51            // mov.16b	v17, v18
	WORD $0x4ea81d12            // mov.16b	v18, v8
	WORD $0x4efd86dd            // add.2d	v29, v22, v29
	WORD $0x711c013f            // cmp	w9, #1792
	WORD $0x54ffe701            // b.ne	LBB1_21
	WORD $0x6e2e1fde            // eor.16b	v30, v30, v14
	WORD $0x6e291d6b            // eor.16b	v11, v11, v9
	WORD $0xad012c1e            // stp	q30, q11, [x0, #32]
	WORD $0x6e3b1d8c            // eor.16b	v12, v12, v27
	WORD $0x6e391dad            // eor.16b	v13, v13, v25
	WORD $0xad02340c            // stp	q12, q13, [x0, #64]
	WORD $0x6e2f1e52            // eor.16b	v18, v18, v15
	WORD $0x6e201fff            // eor.16b	v31, v31, v0
	WORD $0xad037c12            // stp	q18, q31, [x0, #96]
	WORD $0x6e371d4a            // eor.16b	v10, v10, v23
	WORD $0x3dc02be0            // ldr	q0, [sp, #160]                  ; 16-byte Folded Reload
	WORD $0x6e361c00            // eor.16b	v0, v0, v22
	WORD $0x91040021            // add	x1, x1, #256
	WORD $0xd1040042            // sub	x2, x2, #256
	WORD $0xad04000a            // stp	q10, q0, [x0, #128]
	WORD $0xf103fc5f            // cmp	x2, #255
	WORD $0x54ffe3a8            // b.hi	LBB1_20
	WORD $0xb4000222            // cbz	x2, LBB1_30
	WORD $0xf100205f            // cmp	x2, #8
	WORD $0x540000a3            // b.lo	LBB1_26
	WORD $0xcb010008            // sub	x8, x0, x1
	WORD $0x91028108            // add	x8, x8, #160
	WORD $0xf101011f            // cmp	x8, #64
	WORD $0x54000302            // b.hs	LBB1_33
	WORD $0xd2800008            // mov	x8, #0                          ; =0x0
	WORD $0xcb080049            // sub	x9, x2, x8
	WORD $0x8b00010a            // add	x10, x8, x0
	WORD $0x9102814a            // add	x10, x10, #160
	WORD $0x8b080028            // add	x8, x1, x8
	WORD $0x3840150b            // ldrb	w11, [x8], #1
	WORD $0x3800154b            // strb	w11, [x10], #1
	WORD $0xf1000529            // subs	x9, x9, #1
	WORD $0x54ffffa1            // b.ne	LBB1_28
	WORD $0xb9001002            // str	w2, [x0, #16]
	WORD $0xd10183bf            // sub	sp, x29, #96
	WORD $0xa9467bfd            // ldp	x29, x30, [sp, #96]             ; 16-byte Folded Reload
	WORD $0xa9454ff4            // ldp	x20, x19, [sp, #80]             ; 16-byte Folded Reload
	WORD $0xa9446ffc            // ldp	x28, x27, [sp, #64]             ; 16-byte Folded Reload
	WORD $0x6d4323e9            // ldp	d9, d8, [sp, #48]               ; 16-byte Folded Reload
	WORD $0x6d422beb            // ldp	d11, d10, [sp, #32]             ; 16-byte Folded Reload
	WORD $0x6d4133ed            // ldp	d13, d12, [sp, #16]             ; 16-byte Folded Reload
	WORD $0x6cc73bef            // ldp	d15, d14, [sp], #112            ; 16-byte Folded Reload
	WORD $0xd65f03c0            // ret
	WORD $0xf101011f            // cmp	x8, #64
	WORD $0x54000162            // b.hs	LBB1_37
	WORD $0xd2800009            // mov	x9, #0                          ; =0x0
	WORD $0x14000019            // b	LBB1_41
	WORD $0xf101005f            // cmp	x2, #64
	WORD $0x540004c2            // b.hs	LBB1_44
	WORD $0xd2800008            // mov	x8, #0                          ; =0x0
	WORD $0x14000033            // b	LBB1_48
	WORD $0xf101009f            // cmp	x4, #64
	WORD $0x540007c2            // b.hs	LBB1_51
	WORD $0xd2800005            // mov	x5, #0                          ; =0x0
	WORD $0x1400004c            // b	LBB1_55
	WORD $0x9240144a            // and	x10, x2, #0x3f
	WORD $0xcb0a0109            // sub	x9, x8, x10
	WORD $0x8b00006b            // add	x11, x3, x0
	WORD $0x9103416b            // add	x11, x11, #208
	WORD $0x9100802c            // add	x12, x1, #32
	WORD $0xaa0903ed            // mov	x13, x9
	WORD $0xad7f0580            // ldp	q0, q1, [x12, #-32]
	WORD $0xacc20d82            // ldp	q2, q3, [x12], #64
	WORD $0xad3e8560            // stp	q0, q1, [x11, #-48]
	WORD $0xad3f8d62            // stp	q2, q3, [x11, #-16]
	WORD $0x9101016b            // add	x11, x11, #64
	WORD $0xf10101ad            // subs	x13, x13, #64
	WORD $0x54ffff41            // b.ne	LBB1_38
	WORD $0xb4ffbaea            // cbz	x10, LBB1_7
	WORD $0xf100215f            // cmp	x10, #8
	WORD $0x54ffb983            // b.lo	LBB1_5
	WORD $0xaa0903ed            // mov	x13, x9
	WORD $0x9240084a            // and	x10, x2, #0x7
	WORD $0x8b09002b            // add	x11, x1, x9
	WORD $0xcb0a0109            // sub	x9, x8, x10
	WORD $0x8b0301ac            // add	x12, x13, x3
	WORD $0x8b00018c            // add	x12, x12, x0
	WORD $0x9102818c            // add	x12, x12, #160
	WORD $0x8b0a01ad            // add	x13, x13, x10
	WORD $0xcb0801ad            // sub	x13, x13, x8
	WORD $0xfc408560            // ldr	d0, [x11], #8
	WORD $0xfc008580            // str	d0, [x12], #8
	WORD $0xb10021ad            // adds	x13, x13, #8
	WORD $0x54ffffa1            // b.ne	LBB1_42
	WORD $0xb5ffb7ca            // cbnz	x10, LBB1_5
	WORD $0x17fffdc6            // b	LBB1_7
	WORD $0x927a0448            // and	x8, x2, #0xc0
	WORD $0x91008029            // add	x9, x1, #32
	WORD $0x9103400a            // add	x10, x0, #208
	WORD $0xaa0803eb            // mov	x11, x8
	WORD $0xad7f0520            // ldp	q0, q1, [x9, #-32]
	WORD $0xacc20d22            // ldp	q2, q3, [x9], #64
	WORD $0xad3e8540            // stp	q0, q1, [x10, #-48]
	WORD $0xad3f8d42            // stp	q2, q3, [x10, #-16]
	WORD $0x9101014a            // add	x10, x10, #64
	WORD $0xf101016b            // subs	x11, x11, #64
	WORD $0x54ffff41            // b.ne	LBB1_45
	WORD $0xeb08005f            // cmp	x2, x8
	WORD $0x54fff7e0            // b.eq	LBB1_29
	WORD $0xf27d085f            // tst	x2, #0x38
	WORD $0x54fff6a0            // b.eq	LBB1_27
	WORD $0xaa0803eb            // mov	x11, x8
	WORD $0x927d1048            // and	x8, x2, #0xf8
	WORD $0x8b0b0029            // add	x9, x1, x11
	WORD $0x8b00016a            // add	x10, x11, x0
	WORD $0x9102814a            // add	x10, x10, #160
	WORD $0xcb08016b            // sub	x11, x11, x8
	WORD $0xfc408520            // ldr	d0, [x9], #8
	WORD $0xfc008540            // str	d0, [x10], #8
	WORD $0xb100216b            // adds	x11, x11, #8
	WORD $0x54ffffa1            // b.ne	LBB1_49
	WORD $0xeb08005f            // cmp	x2, x8
	WORD $0x54fff620            // b.eq	LBB1_29
	WORD $0x17ffffa8            // b	LBB1_27
	WORD $0x92401626            // and	x6, x17, #0x3f
	WORD $0xcb060085            // sub	x5, x4, x6
	WORD $0x8b000067            // add	x7, x3, x0
	WORD $0x910340e7            // add	x7, x7, #208
	WORD $0x91008033            // add	x19, x1, #32
	WORD $0xaa0503f4            // mov	x20, x5
	WORD $0xad7f0660            // ldp	q0, q1, [x19, #-32]
	WORD $0xacc20e62            // ldp	q2, q3, [x19], #64
	WORD $0xad3e84e0            // stp	q0, q1, [x7, #-48]
	WORD $0xad3f8ce2            // stp	q2, q3, [x7, #-16]
	WORD $0x910100e7            // add	x7, x7, #64
	WORD $0xf1010294            // subs	x20, x20, #64
	WORD $0x54ffff41            // b.ne	LBB1_52
	WORD $0xb4ffb7e6            // cbz	x6, LBB1_15
	WORD $0xf10020df            // cmp	x6, #8
	WORD $0x54ffb683            // b.lo	LBB1_13
	WORD $0xaa0503f4            // mov	x20, x5
	WORD $0x92400a26            // and	x6, x17, #0x7
	WORD $0x8b050027            // add	x7, x1, x5
	WORD $0xcb060085            // sub	x5, x4, x6
	WORD $0x8b030293            // add	x19, x20, x3
	WORD $0x8b000273            // add	x19, x19, x0
	WORD $0x91028273            // add	x19, x19, #160
	WORD $0x8b060294            // add	x20, x20, x6
	WORD $0xcb040294            // sub	x20, x20, x4
	WORD $0xfc4084e0            // ldr	d0, [x7], #8
	WORD $0xfc008660            // str	d0, [x19], #8
	WORD $0xb1002294            // adds	x20, x20, #8
	WORD $0x54ffffa1            // b.ne	LBB1_56
	WORD $0xb5ffb4c6            // cbnz	x6, LBB1_13
	WORD $0x17fffdae            // b	LBB1_15

TEXT ·lsh512_neon_final(SB), $0-32
	MOVD ctx+0(FP), R0
	MOVD hashval+8(FP), R1
	WORD $0x6dbb3bef       // stp	d15, d14, [sp, #-80]!           ; 16-byte Folded Spill
	WORD $0x6d0133ed       // stp	d13, d12, [sp, #16]             ; 16-byte Folded Spill
	WORD $0x6d022beb       // stp	d11, d10, [sp, #32]             ; 16-byte Folded Spill
	WORD $0x6d0323e9       // stp	d9, d8, [sp, #48]               ; 16-byte Folded Spill
	WORD $0xa9047bfd       // stp	x29, x30, [sp, #64]             ; 16-byte Folded Spill
	WORD $0x910103fd       // add	x29, sp, #64
	WORD $0xd102c3e9       // sub	x9, sp, #176
	WORD $0x927ced3f       // and	sp, x9, #0xfffffffffffffff0
	WORD $0xb9401009       // ldr	w9, [x0, #16]
	WORD $0x8b090008       // add	x8, x0, x9
	WORD $0x5280100a       // mov	w10, #128                       ; =0x80
	WORD $0x3902810a       // strb	w10, [x8, #160]
	WORD $0x11000528       // add	w8, w9, #1
	WORD $0x7103fd1f       // cmp	w8, #255
	WORD $0x54000588       // b.hi	LBB2_14
	WORD $0x52801fea       // mov	w10, #255                       ; =0xff
	WORD $0x4b090149       // sub	w9, w10, w9
	WORD $0x7100213f       // cmp	w9, #8
	WORD $0x54000062       // b.hs	LBB2_3
	WORD $0xd280000a       // mov	x10, #0                         ; =0x0
	WORD $0x1400001f       // b	LBB2_12
	WORD $0x7101013f       // cmp	w9, #64
	WORD $0x54000062       // b.hs	LBB2_5
	WORD $0xd280000a       // mov	x10, #0                         ; =0x0
	WORD $0x1400000f       // b	LBB2_9
	WORD $0x927a652a       // and	x10, x9, #0xffffffc0
	WORD $0x8b00010b       // add	x11, x8, x0
	WORD $0x9103416b       // add	x11, x11, #208
	WORD $0x6f00e400       // movi.2d	v0, #0000000000000000
	WORD $0xaa0a03ec       // mov	x12, x10
	WORD $0xad3e8160       // stp	q0, q0, [x11, #-48]
	WORD $0xad3f8160       // stp	q0, q0, [x11, #-16]
	WORD $0x9101016b       // add	x11, x11, #64
	WORD $0xf101018c       // subs	x12, x12, #64
	WORD $0x54ffff81       // b.ne	LBB2_6
	WORD $0xeb09015f       // cmp	x10, x9
	WORD $0x540002c0       // b.eq	LBB2_14
	WORD $0xf27d093f       // tst	x9, #0x38
	WORD $0x540001a0       // b.eq	LBB2_12
	WORD $0xaa0a03ec       // mov	x12, x10
	WORD $0x927d712a       // and	x10, x9, #0xfffffff8
	WORD $0x8b08018b       // add	x11, x12, x8
	WORD $0x8b00016b       // add	x11, x11, x0
	WORD $0x9102816b       // add	x11, x11, #160
	WORD $0xcb0a018c       // sub	x12, x12, x10
	WORD $0x6f00e400       // movi.2d	v0, #0000000000000000
	WORD $0xfc008560       // str	d0, [x11], #8
	WORD $0xb100218c       // adds	x12, x12, #8
	WORD $0x54ffffc1       // b.ne	LBB2_10
	WORD $0xeb09015f       // cmp	x10, x9
	WORD $0x54000100       // b.eq	LBB2_14
	WORD $0xcb0a0129       // sub	x9, x9, x10
	WORD $0x8b080148       // add	x8, x10, x8
	WORD $0x8b000108       // add	x8, x8, x0
	WORD $0x91028108       // add	x8, x8, #160
	WORD $0x3800151f       // strb	wzr, [x8], #1
	WORD $0xf1000529       // subs	x9, x9, #1
	WORD $0x54ffffc1       // b.ne	LBB2_13
	WORD $0xd2800008       // mov	x8, #0                          ; =0x0
	WORD $0xad45501e       // ldp	q30, q20, [x0, #160]
	WORD $0xad464011       // ldp	q17, q16, [x0, #192]
	WORD $0xad47041f       // ldp	q31, q1, [x0, #224]
	WORD $0xad48641a       // ldp	q26, q25, [x0, #256]
	WORD $0xad490815       // ldp	q21, q2, [x0, #288]
	WORD $0xad4a1404       // ldp	q4, q5, [x0, #320]
	WORD $0xad4b0c07       // ldp	q7, q3, [x0, #352]
	WORD $0xad4c5c1d       // ldp	q29, q23, [x0, #384]
	WORD $0xad412009       // ldp	q9, q8, [x0, #32]
	WORD $0xad42280b       // ldp	q11, q10, [x0, #64]
	WORD $0xad43300d       // ldp	q13, q12, [x0, #96]
	WORD $0x90000009       // adrp	x9, lCPI2_0@PAGE
	WORD $0x3dc00126       // ldr	q6, [x9, lCPI2_0@PAGEOFF]
	WORD $0x3d801fe6       // str	q6, [sp, #112]                  ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, lCPI2_1@PAGE
	WORD $0x3dc00126       // ldr	q6, [x9, lCPI2_1@PAGEOFF]
	WORD $0x3d801be6       // str	q6, [sp, #96]                   ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, lCPI2_2@PAGE
	WORD $0x3dc00126       // ldr	q6, [x9, lCPI2_2@PAGEOFF]
	WORD $0x3d8017e6       // str	q6, [sp, #80]                   ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, lCPI2_3@PAGE
	WORD $0x3dc00126       // ldr	q6, [x9, lCPI2_3@PAGEOFF]
	WORD $0x3d8013e6       // str	q6, [sp, #64]                   ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, lCPI2_4@PAGE
	WORD $0x3dc00126       // ldr	q6, [x9, lCPI2_4@PAGEOFF]
	WORD $0x3d800fe6       // str	q6, [sp, #48]                   ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, lCPI2_5@PAGE
	WORD $0x3dc00120       // ldr	q0, [x9, lCPI2_5@PAGEOFF]
	WORD $0x3d800be0       // str	q0, [sp, #32]                   ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, lCPI2_6@PAGE
	WORD $0x3dc00120       // ldr	q0, [x9, lCPI2_6@PAGEOFF]
	WORD $0x3d8007e0       // str	q0, [sp, #16]                   ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, lCPI2_7@PAGE
	WORD $0x3dc00120       // ldr	q0, [x9, lCPI2_7@PAGEOFF]
	WORD $0x3d8003e0       // str	q0, [sp]                        ; 16-byte Folded Spill
	WORD $0x90000009       // adrp	x9, _STEP512@PAGE
	WORD $0x91000129       // add	x9, x9, _STEP512@PAGEOFF
	WORD $0xad44380f       // ldp	q15, q14, [x0, #128]
	WORD $0xad42cff6       // ldp	q22, q19, [sp, #80]             ; 32-byte Folded Reload
	WORD $0xad41e3fb       // ldp	q27, q24, [sp, #48]             ; 32-byte Folded Reload
	WORD $0xad0453e1       // stp	q1, q20, [sp, #128]             ; 32-byte Folded Spill
	WORD $0x6e3e1d29       // eor.16b	v9, v9, v30
	WORD $0x6e341d08       // eor.16b	v8, v8, v20
	WORD $0x3d802bff       // str	q31, [sp, #160]                 ; 16-byte Folded Spill
	WORD $0x6e311d6b       // eor.16b	v11, v11, v17
	WORD $0x8b08012a       // add	x10, x9, x8
	WORD $0x6e301d4a       // eor.16b	v10, v10, v16
	WORD $0x6e3f1dad       // eor.16b	v13, v13, v31
	WORD $0x6e211d8c       // eor.16b	v12, v12, v1
	WORD $0x6e3a1def       // eor.16b	v15, v15, v26
	WORD $0x6e391dce       // eor.16b	v14, v14, v25
	WORD $0x4ee985a9       // add.2d	v9, v13, v9
	WORD $0x4ee88588       // add.2d	v8, v12, v8
	WORD $0x4eeb85eb       // add.2d	v11, v15, v11
	WORD $0x4eea85ca       // add.2d	v10, v14, v10
	WORD $0x4f575526       // shl.2d	v6, v9, #23
	WORD $0x6f574526       // sri.2d	v6, v9, #41
	WORD $0x4f575509       // shl.2d	v9, v8, #23
	WORD $0x6f574509       // sri.2d	v9, v8, #41
	WORD $0x4f575568       // shl.2d	v8, v11, #23
	WORD $0x6f574568       // sri.2d	v8, v11, #41
	WORD $0x4f57554b       // shl.2d	v11, v10, #23
	WORD $0x6f57454b       // sri.2d	v11, v10, #41
	WORD $0x4ea71cff       // mov.16b	v31, v7
	WORD $0xad401d4a       // ldp	q10, q7, [x10]
	WORD $0x6e2a1cc6       // eor.16b	v6, v6, v10
	WORD $0x6e271d27       // eor.16b	v7, v9, v7
	WORD $0xad412949       // ldp	q9, q10, [x10, #32]
	WORD $0x6e291d08       // eor.16b	v8, v8, v9
	WORD $0x6e2a1d69       // eor.16b	v9, v11, v10
	WORD $0x4eed84ca       // add.2d	v10, v6, v13
	WORD $0x4eec84eb       // add.2d	v11, v7, v12
	WORD $0x4eef850c       // add.2d	v12, v8, v15
	WORD $0x4eee852d       // add.2d	v13, v9, v14
	WORD $0x4f7b554e       // shl.2d	v14, v10, #59
	WORD $0x6f7b454e       // sri.2d	v14, v10, #5
	WORD $0x4f7b556a       // shl.2d	v10, v11, #59
	WORD $0x6f7b456a       // sri.2d	v10, v11, #5
	WORD $0x4f7b558b       // shl.2d	v11, v12, #59
	WORD $0x6f7b458b       // sri.2d	v11, v12, #5
	WORD $0x4f7b55ac       // shl.2d	v12, v13, #59
	WORD $0x6f7b45ac       // sri.2d	v12, v13, #5
	WORD $0x4ee685c6       // add.2d	v6, v14, v6
	WORD $0x4ee78547       // add.2d	v7, v10, v7
	WORD $0x4ee88568       // add.2d	v8, v11, v8
	WORD $0x4ee98589       // add.2d	v9, v12, v9
	WORD $0x3dc01ff4       // ldr	q20, [sp, #112]                 ; 16-byte Folded Reload
	WORD $0x6ef445cd       // ushl.2d	v13, v14, v20
	WORD $0x6ef345ce       // ushl.2d	v14, v14, v19
	WORD $0x6e2d1dcd       // eor.16b	v13, v14, v13
	WORD $0x6ef6454e       // ushl.2d	v14, v10, v22
	WORD $0x6ef8454a       // ushl.2d	v10, v10, v24
	WORD $0x6e2e1d4a       // eor.16b	v10, v10, v14
	WORD $0x6efb456e       // ushl.2d	v14, v11, v27
	WORD $0xad4083e1       // ldp	q1, q0, [sp, #16]               ; 32-byte Folded Reload
	WORD $0x6ee0456b       // ushl.2d	v11, v11, v0
	WORD $0x6e2e1d6b       // eor.16b	v11, v11, v14
	WORD $0x6ee1458e       // ushl.2d	v14, v12, v1
	WORD $0x3dc003fc       // ldr	q28, [sp]                       ; 16-byte Folded Reload
	WORD $0x6efc458c       // ushl.2d	v12, v12, v28
	WORD $0x6e2e1d8c       // eor.16b	v12, v12, v14
	WORD $0x6e0740e7       // ext.16b	v7, v7, v7, #8
	WORD $0x6e0640ee       // ext.16b	v14, v7, v6, #8
	WORD $0x6e0740c6       // ext.16b	v6, v6, v7, #8
	WORD $0x6e094127       // ext.16b	v7, v9, v9, #8
	WORD $0x6e0840e9       // ext.16b	v9, v7, v8, #8
	WORD $0x6e074107       // ext.16b	v7, v8, v7, #8
	WORD $0x6e0d41a8       // ext.16b	v8, v13, v13, #8
	WORD $0x6e0a414a       // ext.16b	v10, v10, v10, #8
	WORD $0x6e0a410d       // ext.16b	v13, v8, v10, #8
	WORD $0x6e084148       // ext.16b	v8, v10, v8, #8
	WORD $0x6e0b416a       // ext.16b	v10, v11, v11, #8
	WORD $0x6e0c418b       // ext.16b	v11, v12, v12, #8
	WORD $0x6e0b414c       // ext.16b	v12, v10, v11, #8
	WORD $0x6e0a416a       // ext.16b	v10, v11, v10, #8
	WORD $0x6e11420b       // ext.16b	v11, v16, v17, #8
	WORD $0x6e104230       // ext.16b	v16, v17, v16, #8
	WORD $0x6e1a432f       // ext.16b	v15, v25, v26, #8
	WORD $0x6e194359       // ext.16b	v25, v26, v25, #8
	WORD $0x6e351d31       // eor.16b	v17, v9, v21
	WORD $0x6e221ce7       // eor.16b	v7, v7, v2
	WORD $0x6e241d9a       // eor.16b	v26, v12, v4
	WORD $0x6e251d49       // eor.16b	v9, v10, v5
	WORD $0x6e3f1dca       // eor.16b	v10, v14, v31
	WORD $0x6e231cc6       // eor.16b	v6, v6, v3
	WORD $0x6e3d1dac       // eor.16b	v12, v13, v29
	WORD $0x6e371d08       // eor.16b	v8, v8, v23
	WORD $0x4eea8631       // add.2d	v17, v17, v10
	WORD $0x4ee684e7       // add.2d	v7, v7, v6
	WORD $0x4eec875a       // add.2d	v26, v26, v12
	WORD $0x4ee88529       // add.2d	v9, v9, v8
	WORD $0x4f47562d       // shl.2d	v13, v17, #7
	WORD $0x6f47462d       // sri.2d	v13, v17, #57
	WORD $0x4f4754f1       // shl.2d	v17, v7, #7
	WORD $0x6f4744f1       // sri.2d	v17, v7, #57
	WORD $0x4f475747       // shl.2d	v7, v26, #7
	WORD $0x6f474747       // sri.2d	v7, v26, #57
	WORD $0x4f47552e       // shl.2d	v14, v9, #7
	WORD $0x6f47452e       // sri.2d	v14, v9, #57
	WORD $0xad42255a       // ldp	q26, q9, [x10, #64]
	WORD $0x6e3a1dad       // eor.16b	v13, v13, v26
	WORD $0x6e291e29       // eor.16b	v9, v17, v9
	WORD $0xad434951       // ldp	q17, q18, [x10, #96]
	WORD $0x6e311ce7       // eor.16b	v7, v7, v17
	WORD $0x4eeb8491       // add.2d	v17, v4, v11
	WORD $0x4ef084b0       // add.2d	v16, v5, v16
	WORD $0x4eef87ba       // add.2d	v26, v29, v15
	WORD $0x4ef986f9       // add.2d	v25, v23, v25
	WORD $0x6e321dd2       // eor.16b	v18, v14, v18
	WORD $0x4eea85aa       // add.2d	v10, v13, v10
	WORD $0x4ee68526       // add.2d	v6, v9, v6
	WORD $0x4eec84eb       // add.2d	v11, v7, v12
	WORD $0x4ee88648       // add.2d	v8, v18, v8
	WORD $0x4f43554c       // shl.2d	v12, v10, #3
	WORD $0x6f43454c       // sri.2d	v12, v10, #61
	WORD $0x4f4354ca       // shl.2d	v10, v6, #3
	WORD $0x6f4344ca       // sri.2d	v10, v6, #61
	WORD $0x4f435566       // shl.2d	v6, v11, #3
	WORD $0x6f434566       // sri.2d	v6, v11, #61
	WORD $0x4f43550b       // shl.2d	v11, v8, #3
	WORD $0x6f43450b       // sri.2d	v11, v8, #61
	WORD $0x4eed8588       // add.2d	v8, v12, v13
	WORD $0x4ee98549       // add.2d	v9, v10, v9
	WORD $0x4ee784c7       // add.2d	v7, v6, v7
	WORD $0x4ef28572       // add.2d	v18, v11, v18
	WORD $0x6ef4458d       // ushl.2d	v13, v12, v20
	WORD $0x6ef3458c       // ushl.2d	v12, v12, v19
	WORD $0x6e2d1d8e       // eor.16b	v14, v12, v13
	WORD $0x6ef6454c       // ushl.2d	v12, v10, v22
	WORD $0x6ef8454a       // ushl.2d	v10, v10, v24
	WORD $0x6e2c1d4a       // eor.16b	v10, v10, v12
	WORD $0x6efb44cc       // ushl.2d	v12, v6, v27
	WORD $0x6ee044c6       // ushl.2d	v6, v6, v0
	WORD $0x6e2c1cc6       // eor.16b	v6, v6, v12
	WORD $0x6ee1456c       // ushl.2d	v12, v11, v1
	WORD $0x6efc456b       // ushl.2d	v11, v11, v28
	WORD $0x6e2c1d6b       // eor.16b	v11, v11, v12
	WORD $0x6e094129       // ext.16b	v9, v9, v9, #8
	WORD $0x6e08412d       // ext.16b	v13, v9, v8, #8
	WORD $0x6e09410c       // ext.16b	v12, v8, v9, #8
	WORD $0x6e124252       // ext.16b	v18, v18, v18, #8
	WORD $0x6e074249       // ext.16b	v9, v18, v7, #8
	WORD $0x6e1240e8       // ext.16b	v8, v7, v18, #8
	WORD $0x6e0e41c7       // ext.16b	v7, v14, v14, #8
	WORD $0x6e0a4152       // ext.16b	v18, v10, v10, #8
	WORD $0x6e1240ef       // ext.16b	v15, v7, v18, #8
	WORD $0x6e07424e       // ext.16b	v14, v18, v7, #8
	WORD $0x6e0640c6       // ext.16b	v6, v6, v6, #8
	WORD $0x6e0b4167       // ext.16b	v7, v11, v11, #8
	WORD $0x6e0740cb       // ext.16b	v11, v6, v7, #8
	WORD $0x6e0640ea       // ext.16b	v10, v7, v6, #8
	WORD $0x6e0440a6       // ext.16b	v6, v5, v4, #8
	WORD $0x6e054085       // ext.16b	v5, v4, v5, #8
	WORD $0x6e1d42e7       // ext.16b	v7, v23, v29, #8
	WORD $0x6e1743b2       // ext.16b	v18, v29, v23, #8
	WORD $0x3dc027e0       // ldr	q0, [sp, #144]                  ; 16-byte Folded Reload
	WORD $0x6e004004       // ext.16b	v4, v0, v0, #8
	WORD $0x3dc023e0       // ldr	q0, [sp, #128]                  ; 16-byte Folded Reload
	WORD $0x6e00401c       // ext.16b	v28, v0, v0, #8
	WORD $0x4efe8454       // add.2d	v20, v2, v30
	WORD $0x4ee486be       // add.2d	v30, v21, v4
	WORD $0x3dc02be0       // ldr	q0, [sp, #160]                  ; 16-byte Folded Reload
	WORD $0x4ee08461       // add.2d	v1, v3, v0
	WORD $0x4ebf1fe0       // mov.16b	v0, v31
	WORD $0x4efc87ff       // add.2d	v31, v31, v28
	WORD $0x6e024044       // ext.16b	v4, v2, v2, #8
	WORD $0x6e03407c       // ext.16b	v28, v3, v3, #8
	WORD $0x4ef58682       // add.2d	v2, v20, v21
	WORD $0x4efe8495       // add.2d	v21, v4, v30
	WORD $0x4ef184c4       // add.2d	v4, v6, v17
	WORD $0x4ee58605       // add.2d	v5, v16, v5
	WORD $0x4ee08423       // add.2d	v3, v1, v0
	WORD $0x91020108       // add	x8, x8, #128
	WORD $0x4eff8797       // add.2d	v23, v28, v31
	WORD $0x4efa84fd       // add.2d	v29, v7, v26
	WORD $0x4eb71ee7       // mov.16b	v7, v23
	WORD $0x4ef28737       // add.2d	v23, v25, v18
	WORD $0x711c011f       // cmp	w8, #1792
	WORD $0x54ffe9c1       // b.ne	LBB2_15
	WORD $0x6e3f1da2       // eor.16b	v2, v13, v31
	WORD $0x6e211d81       // eor.16b	v1, v12, v1
	WORD $0xad030402       // stp	q2, q1, [x0, #96]
	WORD $0x6e3a1de3       // eor.16b	v3, v15, v26
	WORD $0x6e391dc4       // eor.16b	v4, v14, v25
	WORD $0xad041003       // stp	q3, q4, [x0, #128]
	WORD $0xce1e0922       // eor3.16b	v2, v9, v30, v2
	WORD $0xce140500       // eor3.16b	v0, v8, v20, v1
	WORD $0xad010002       // stp	q2, q0, [x0, #32]
	WORD $0xce110d60       // eor3.16b	v0, v11, v17, v3
	WORD $0xce101141       // eor3.16b	v1, v10, v16, v4
	WORD $0xad020400       // stp	q0, q1, [x0, #64]
	WORD $0x3d800022       // str	q2, [x1]
	WORD $0x3dc00c00       // ldr	q0, [x0, #48]
	WORD $0x3d800420       // str	q0, [x1, #16]
	WORD $0x3dc01000       // ldr	q0, [x0, #64]
	WORD $0x3d800820       // str	q0, [x1, #32]
	WORD $0x3dc01400       // ldr	q0, [x0, #80]
	WORD $0x3d800c20       // str	q0, [x1, #48]
	WORD $0xd10103bf       // sub	sp, x29, #64
	WORD $0xa9447bfd       // ldp	x29, x30, [sp, #64]             ; 16-byte Folded Reload
	WORD $0x6d4323e9       // ldp	d9, d8, [sp, #48]               ; 16-byte Folded Reload
	WORD $0x6d422beb       // ldp	d11, d10, [sp, #32]             ; 16-byte Folded Reload
	WORD $0x6d4133ed       // ldp	d13, d12, [sp, #16]             ; 16-byte Folded Reload
	WORD $0x6cc53bef       // ldp	d15, d14, [sp], #80             ; 16-byte Folded Reload
	WORD $0xd65f03c0       // ret
